{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aaa\\\\Desktop\\\\01-starting-project (3)\\\\01-starting-project\\\\src\\\\components\\\\Counter.js\",\n  _s = $RefreshSig$();\nimport { useSelector, useDispatch } from 'react-redux'; //store와 연결하기위해 import\nimport React from 'react';\nimport { useState } from 'react';\nimport classes from './Counter.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Counter = () => {\n  _s();\n  const [input, setInput] = useState(0);\n  const counter = useSelector(state => state.counter); //redux store의 counter state를 가져올때, useSelector를 통하여 가져옴 store의 state가 변경될때마다 Counter 컴포넌트도 재렌더링\n\n  const dispatch = useDispatch(); //store에서 action을 전달받기위한 함수\n\n  const onChange = e => {\n    setInput(e.target.value);\n    console.log(input);\n  };\n  const incrementHandler = () => {\n    dispatch({\n      type: 'increment'\n    });\n  };\n  const decrementHandler = () => {\n    dispatch({\n      type: 'decrement'\n    });\n  };\n  const increaseHandler = () => {\n    dispatch({\n      type: 'increase',\n      amount: +input\n    }); // action에 amount라는 payload를 추가 store에 있는것과 여기의  이름이 같아야함\n    console.log(counter);\n  };\n  const toggleCounterHandler = () => {\n    dispatch({\n      type: 'toggle'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: classes.counter,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Redux \\uCE74\\uC6B4\\uD130\\uC5F0\\uC2B5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.value,\n      children: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: incrementHandler,\n        children: \"\\uC99D\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: onChange,\n        value: input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: increaseHandler,\n        children: \"input\\uC785\\uB825\\uAC12\\uB9CC\\uD07C \\uC99D\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: decrementHandler,\n        children: \"\\uAC10\\uC18C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCounterHandler,\n      children: \"\\uCE74\\uC6B4\\uD130 \\uCF1C\\uAE30/\\uB044\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Counter, \"ILyQ18+uIRRYmUmgIb0HjMzP6pI=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Counter;\nexport default Counter;\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["useSelector","useDispatch","React","useState","classes","jsxDEV","_jsxDEV","Counter","_s","input","setInput","counter","state","dispatch","onChange","e","target","value","console","log","incrementHandler","type","decrementHandler","increaseHandler","amount","toggleCounterHandler","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/aaa/Desktop/01-starting-project (3)/01-starting-project/src/components/Counter.js"],"sourcesContent":["import {useSelector,useDispatch,} from 'react-redux'; //store와 연결하기위해 import\nimport React from 'react';\nimport { useState } from 'react';\nimport classes from './Counter.module.css';\n\nconst Counter = () => {\n\n  const [input,setInput] = useState(0);\n    \n  const counter = useSelector(state => state.counter); //redux store의 counter state를 가져올때, useSelector를 통하여 가져옴 store의 state가 변경될때마다 Counter 컴포넌트도 재렌더링\n \n  const dispatch = useDispatch(); //store에서 action을 전달받기위한 함수\n\n  const onChange = (e) => {\n    \n     setInput(e.target.value);\n     console.log(input);\n     \n  }\n\n  const incrementHandler = () => {\n    dispatch({type:'increment'});\n  };\n\n  const decrementHandler = () => {\n    dispatch({type:'decrement'});\n  };\n\n  const increaseHandler = () => {\n    dispatch({type:'increase',amount : +input}); // action에 amount라는 payload를 추가 store에 있는것과 여기의  이름이 같아야함\n    console.log(counter)\n  };\n\n  const toggleCounterHandler = () => {\n    dispatch({type:'toggle'})\n    \n  };\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux 카운터연습</h1>\n      <div className={classes.value}>{counter}</div> \n      <div>\n        <button onClick={incrementHandler} >증가</button>\n        <input  onChange={onChange} value={input}></input>\n        <button onClick={increaseHandler} >input입력값만큼 증가</button>\n        <button onClick={decrementHandler}>감소</button>\n      </div>\n      <button onClick={toggleCounterHandler}>카운터 켜기/끄기</button>\n    </main>\n  );\n};\n\nexport default Counter;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}