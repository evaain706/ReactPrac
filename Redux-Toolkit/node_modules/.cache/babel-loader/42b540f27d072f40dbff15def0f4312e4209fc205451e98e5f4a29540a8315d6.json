{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aaa\\\\Desktop\\\\ReactPrac\\\\Redux-Toolkit\\\\src\\\\components\\\\Counter.js\",\n  _s = $RefreshSig$();\nimport { useSelector, useDispatch } from 'react-redux'; //store와 연결하기위해 import\nimport React from 'react';\nimport { useState } from 'react';\nimport { counterActions } from '../store';\nimport classes from './Counter.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Counter = () => {\n  _s();\n  const [input, setInput] = useState(0);\n  const counter = useSelector(state => state.counter); //redux store의 counter state를 가져올때, useSelector를 통하여 가져옴 store의 state가 변경될때마다 Counter 컴포넌트도 재렌더링\n  const show = useSelector(state => state.showCounter);\n  const dispatch = useDispatch(); //store에서 action을 전달받기위한 함수\n\n  const onChange = e => {\n    setInput(e.target.value);\n    console.log(input);\n  };\n  const incrementHandler = () => {\n    dispatch(counterActions.increment());\n  };\n  const decrementHandler = () => {\n    dispatch(counterActions.decrement());\n  };\n  const increaseHandler = () => {\n    dispatch(counterActions.increase(+input)); // action에 amount라는 payload를 추가 store에 있는것과 여기의  이름이 같아야함\n    console.log(counter);\n  };\n  const toggleCounterHandler = () => {\n    dispatch(counterActions.toggleCounter());\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: classes.counter,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Redux \\uCE74\\uC6B4\\uD130\\uC5F0\\uC2B5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), show && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.value,\n      children: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: incrementHandler,\n        children: \"\\uC99D\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: onChange,\n        value: input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: increaseHandler,\n        children: \"input\\uC785\\uB825\\uAC12\\uB9CC\\uD07C \\uC99D\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: decrementHandler,\n        children: \"\\uAC10\\uC18C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCounterHandler,\n      children: \"\\uCE74\\uC6B4\\uD130 \\uCF1C\\uAE30/\\uB044\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Counter, \"AdgE7mKVhhUjZl3llooQ9t9f6Xo=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = Counter;\nexport default Counter;\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["useSelector","useDispatch","React","useState","counterActions","classes","jsxDEV","_jsxDEV","Counter","_s","input","setInput","counter","state","show","showCounter","dispatch","onChange","e","target","value","console","log","incrementHandler","increment","decrementHandler","decrement","increaseHandler","increase","toggleCounterHandler","toggleCounter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/aaa/Desktop/ReactPrac/Redux-Toolkit/src/components/Counter.js"],"sourcesContent":["import {useSelector,useDispatch,} from 'react-redux'; //store와 연결하기위해 import\nimport React from 'react';\nimport { useState } from 'react';\nimport { counterActions } from '../store';\nimport classes from './Counter.module.css';\n\nconst Counter = () => {\n\n  const [input,setInput] = useState(0);\n    \n  const counter = useSelector(state => state.counter); //redux store의 counter state를 가져올때, useSelector를 통하여 가져옴 store의 state가 변경될때마다 Counter 컴포넌트도 재렌더링\n  const show = useSelector(state => state.showCounter);\n \n  const dispatch = useDispatch(); //store에서 action을 전달받기위한 함수\n\n  const onChange = (e) => {\n    \n     setInput(e.target.value);\n     console.log(input);\n     \n  }\n\n  const incrementHandler = () => {\n    dispatch(counterActions.increment());\n  };\n\n  const decrementHandler = () => {\n    dispatch(counterActions.decrement());\n  };\n\n  const increaseHandler = () => {\n    dispatch(counterActions.increase(+input)); // action에 amount라는 payload를 추가 store에 있는것과 여기의  이름이 같아야함\n    console.log(counter)\n  };\n\n  const toggleCounterHandler = () => {\n    dispatch(counterActions.toggleCounter())\n    \n  };\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux 카운터연습</h1>\n      {show && <div className={classes.value}>{counter}</div>} \n      <div>\n        <button onClick={incrementHandler} >증가</button>\n        <input  onChange={onChange} value={input}></input>\n        <button onClick={increaseHandler} >input입력값만큼 증가</button>\n        <button onClick={decrementHandler}>감소</button>\n      </div>\n      <button onClick={toggleCounterHandler}>카운터 켜기/끄기</button>\n    </main>\n  );\n};\n\nexport default Counter;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}