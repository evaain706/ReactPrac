{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aaa\\\\Desktop\\\\01-starting-project (3)\\\\01-starting-project\\\\src\\\\components\\\\Counter.js\",\n  _s = $RefreshSig$();\nimport { useSelector, useDispatch } from 'react-redux'; //store와 연결하기위해 import\nimport classes from './Counter.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Counter = () => {\n  _s();\n  const counter = useSelector(state => state.counter); //redux store의 counter state를 가져올때, useSelector를 통하여 가져옴 store의 state가 변경될때마다 Counter 컴포넌트도 재렌더링\n  const toggleCounterHandler = () => {};\n  const dispatch = useDispatch(); //store에서 action을 전달받기위한 함수\n\n  const incrementHandler = () => {\n    dispatch({\n      type: 'increment'\n    });\n  };\n  const decrementHandler = () => {\n    dispatch({\n      type: 'decrement'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: classes.counter,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Redux \\uCE74\\uC6B4\\uD130\\uC5F0\\uC2B5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.value,\n      children: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: incrementHandler,\n        children: \"\\uC99D\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: decrementHandler,\n        children: \"\\uAC10\\uC18C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCounterHandler,\n      children: \"\\uCE74\\uC6B4\\uD130 \\uCF1C\\uAE30/\\uB044\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(Counter, \"kekweKlgGDYl7VGjQQ+BKXXb0Ho=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Counter;\nexport default Counter;\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["useSelector","useDispatch","classes","jsxDEV","_jsxDEV","Counter","_s","counter","state","toggleCounterHandler","dispatch","incrementHandler","type","decrementHandler","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onClick","_c","$RefreshReg$"],"sources":["C:/Users/aaa/Desktop/01-starting-project (3)/01-starting-project/src/components/Counter.js"],"sourcesContent":["import {useSelector,useDispatch} from 'react-redux'; //store와 연결하기위해 import\nimport classes from './Counter.module.css';\n\nconst Counter = () => {\n  const counter = useSelector(state => state.counter); //redux store의 counter state를 가져올때, useSelector를 통하여 가져옴 store의 state가 변경될때마다 Counter 컴포넌트도 재렌더링\n  const toggleCounterHandler = () => {};\n  const dispatch = useDispatch(); //store에서 action을 전달받기위한 함수\n\n  const incrementHandler = () => {\n    dispatch({type:'increment'});\n  };\n\n  const decrementHandler = () => {\n    dispatch({type:'decrement'});\n  };\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux 카운터연습</h1>\n      <div className={classes.value}>{counter}</div> \n      <div>\n        <button onClick={incrementHandler} >증가</button>\n        <button onClick={decrementHandler}>감소</button>\n      </div>\n      <button onClick={toggleCounterHandler}>카운터 켜기/끄기</button>\n    </main>\n  );\n};\n\nexport default Counter;\n"],"mappings":";;AAAA,SAAQA,WAAW,EAACC,WAAW,QAAO,aAAa,CAAC,CAAC;AACrD,OAAOC,OAAO,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,OAAO,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACD,OAAO,CAAC,CAAC,CAAC;EACrD,MAAME,oBAAoB,GAAGA,CAAA,KAAM,CAAC,CAAC;EACrC,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC,MAAMU,gBAAgB,GAAGA,CAAA,KAAM;IAC7BD,QAAQ,CAAC;MAACE,IAAI,EAAC;IAAW,CAAC,CAAC;EAC9B,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7BH,QAAQ,CAAC;MAACE,IAAI,EAAC;IAAW,CAAC,CAAC;EAC9B,CAAC;EAED,oBACER,OAAA;IAAMU,SAAS,EAAEZ,OAAO,CAACK,OAAQ;IAAAQ,QAAA,gBAC/BX,OAAA;MAAAW,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBf,OAAA;MAAKU,SAAS,EAAEZ,OAAO,CAACkB,KAAM;MAAAL,QAAA,EAAER;IAAO;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC9Cf,OAAA;MAAAW,QAAA,gBACEX,OAAA;QAAQiB,OAAO,EAAEV,gBAAiB;QAAAI,QAAA,EAAE;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC/Cf,OAAA;QAAQiB,OAAO,EAAER,gBAAiB;QAAAE,QAAA,EAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eACNf,OAAA;MAAQiB,OAAO,EAAEZ,oBAAqB;MAAAM,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrD,CAAC;AAEX,CAAC;AAACb,EAAA,CAxBID,OAAO;EAAA,QACKL,WAAW,EAEVC,WAAW;AAAA;AAAAqB,EAAA,GAHxBjB,OAAO;AA0Bb,eAAeA,OAAO;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}