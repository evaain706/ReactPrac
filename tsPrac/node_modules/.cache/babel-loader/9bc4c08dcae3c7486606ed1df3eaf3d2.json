{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aaa\\\\Desktop\\\\ReactPrac\\\\tsPrac\\\\src\\\\components\\\\NewTodo.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTodo = props => {\n  _s();\n\n  //함수를 props로 받아올때\n  const todoTextInputRef = useRef(null); //TS에서의 input요소 useRef사용\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const currentText = todoTextInputRef.current.value;\n\n    if ((currentText === null || currentText === void 0 ? void 0 : currentText.trim().length) === 0) {\n      //throw error\n      return;\n    }\n\n    props.onAddTodo(currentText);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"text\",\n      children: \"Todo Text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"text\",\n      ref: todoTextInputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Todo\\uCD94\\uAC00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewTodo, \"1sC+Y33RgTD/2YiEPp+XilOCiTo=\");\n\n_c = NewTodo;\nexport default NewTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTodo\");","map":{"version":3,"names":["React","useRef","NewTodo","props","todoTextInputRef","submitHandler","event","preventDefault","currentText","current","value","trim","length","onAddTodo"],"sources":["C:/Users/aaa/Desktop/ReactPrac/tsPrac/src/components/NewTodo.tsx"],"sourcesContent":["import React from 'react';\r\nimport { useRef } from 'react';\r\n\r\nconst NewTodo: React.FC<{ onAddTodo: (text: string) => void }> = (props) => {\r\n  //함수를 props로 받아올때\r\n\r\n  const todoTextInputRef = useRef<HTMLInputElement>(null); //TS에서의 input요소 useRef사용\r\n\r\n  const submitHandler = (event: React.FormEvent) => {\r\n    event.preventDefault();\r\n\r\n    const currentText = todoTextInputRef.current!.value;\r\n\r\n    if (currentText?.trim().length === 0) {\r\n      //throw error\r\n      return;\r\n    }\r\n\r\n    props.onAddTodo(currentText);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <label htmlFor='text'>Todo Text</label>\r\n      <input type='text' id='text' ref={todoTextInputRef} />\r\n      <button>Todo추가</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NewTodo;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,OAAvB;;;AAEA,MAAMC,OAAwD,GAAIC,KAAD,IAAW;EAAA;;EAC1E;EAEA,MAAMC,gBAAgB,GAAGH,MAAM,CAAmB,IAAnB,CAA/B,CAH0E,CAGjB;;EAEzD,MAAMI,aAAa,GAAIC,KAAD,IAA4B;IAChDA,KAAK,CAACC,cAAN;IAEA,MAAMC,WAAW,GAAGJ,gBAAgB,CAACK,OAAjB,CAA0BC,KAA9C;;IAEA,IAAI,CAAAF,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAEG,IAAb,GAAoBC,MAApB,MAA+B,CAAnC,EAAsC;MACpC;MACA;IACD;;IAEDT,KAAK,CAACU,SAAN,CAAgBL,WAAhB;EACD,CAXD;;EAaA,oBACE;IAAM,QAAQ,EAAEH,aAAhB;IAAA,wBACE;MAAO,OAAO,EAAC,MAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAO,IAAI,EAAC,MAAZ;MAAmB,EAAE,EAAC,MAAtB;MAA6B,GAAG,EAAED;IAAlC;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,CAzBD;;GAAMF,O;;KAAAA,O;AA2BN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}