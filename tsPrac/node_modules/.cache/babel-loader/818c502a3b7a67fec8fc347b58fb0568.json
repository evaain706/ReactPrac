{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aaa\\\\Desktop\\\\ReactPrac\\\\tsPrac\\\\src\\\\components\\\\Todos.tsx\";\nimport React from 'react'; //FC라는 제네릭안에서 props 인자들의 타입정의해서 결합\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Todos = props => {\n  //props는 객체형태로 넘어옴  React.FC라는 제네릭 형태로 함수형 컴포넌트로 동작한다고 선언\n  //모든 커스텀 컴포넌트를 만들때마다 이런식으로 하면됨\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: props.items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: item\n    }, item, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Todos;\nexport default Todos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"names":["React","Todos","props","items","map","item"],"sources":["C:/Users/aaa/Desktop/ReactPrac/tsPrac/src/components/Todos.tsx"],"sourcesContent":["import React from 'react';\r\n\r\n//FC라는 제네릭안에서 props 인자들의 타입정의해서 결합\r\nconst Todos: React.FC<{ items: string[] }> = (props) => {\r\n  //props는 객체형태로 넘어옴  React.FC라는 제네릭 형태로 함수형 컴포넌트로 동작한다고 선언\r\n\r\n  //모든 커스텀 컴포넌트를 만들때마다 이런식으로 하면됨\r\n\r\n  return (\r\n    <ul>\r\n      {props.items.map((item) => (\r\n        <li key={item}>{item}</li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Todos;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;;;AACA,MAAMC,KAAoC,GAAIC,KAAD,IAAW;EACtD;EAEA;EAEA,oBACE;IAAA,UACGA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAiBC,IAAD,iBACf;MAAA,UAAgBA;IAAhB,GAASA,IAAT;MAAA;MAAA;MAAA;IAAA,QADD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,CAZD;;KAAMJ,K;AAcN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}