{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aaa\\\\Desktop\\\\ReactPrac\\\\redux-toolkit-async\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { uiActions } from './store/ui-slice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const showCart = useSelector(state => state.ui.cartIsVisible);\n  const cart = useSelector(state => state.cart);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const sendCartData = async () => {\n      dispatch(uiActions.showNotification({\n        status: 'pending',\n        title: '전송중...',\n        message: '장바구니 데이터 전송중'\n      }));\n      const response = await fetch('https://reduxprac-843b3-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(cart) //useSelector로 cart state를 가져왔기때문에 항상 최신의 상태유지가능\n      });\n      if (!response.ok) {\n        throw new Error('전송실패');\n      }\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: '전송성공',\n        message: '장바구니 데이터 전송성공'\n      }));\n    };\n    sendCartData().catch(error => {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: '전송실패',\n        message: '장바구니 데이터 전송실패'\n      }));\n    });\n  }, [cart]);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [showCart && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"CiS6X+bdwbDeN61xi9JzoSC6yIA=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","useSelector","useDispatch","Cart","Layout","Products","uiActions","jsxDEV","_jsxDEV","App","_s","showCart","state","ui","cartIsVisible","cart","dispatch","sendCartData","showNotification","status","title","message","response","fetch","method","body","JSON","stringify","ok","Error","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/aaa/Desktop/ReactPrac/redux-toolkit-async/src/App.js"],"sourcesContent":["import { useEffect,useState } from 'react';\nimport { useSelector,useDispatch } from 'react-redux';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { uiActions } from './store/ui-slice';\n\n\n\nfunction App() {\n\n  const showCart = useSelector((state) => state.ui.cartIsVisible);\n  const cart = useSelector(state => state.cart);\n\n  const dispatch = useDispatch();\n\n\n\n\n  useEffect(()=> {\n    const sendCartData = async () => {\n      dispatch(uiActions.showNotification({\n        status:'pending',\n        title:'전송중...',\n        message:'장바구니 데이터 전송중',\n      }))\n      const response = await fetch('https://reduxprac-843b3-default-rtdb.firebaseio.com/cart.json',\n        {\n          method:'PUT',\n          body:JSON.stringify(cart), //useSelector로 cart state를 가져왔기때문에 항상 최신의 상태유지가능\n        });\n\n        if(!response.ok){\n         throw new Error('전송실패')\n        }\n    \n      \n        dispatch(uiActions.showNotification({\n          status:'success',\n          title:'전송성공',\n          message:'장바구니 데이터 전송성공',\n        }))\n\n    };\n   \n    sendCartData().catch(error => {\n      dispatch(uiActions.showNotification({\n        status:'error',\n        title:'전송실패',\n        message:'장바구니 데이터 전송실패',\n      }))\n\n    });\n   \n  },[cart]);\n \n\n  return (\n    <Layout>\n    \n      {showCart && <Cart /> }\n      <Products />\n    </Layout>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,EAACC,QAAQ,QAAQ,OAAO;AAC1C,SAASC,WAAW,EAACC,WAAW,QAAQ,aAAa;AACrD,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI7C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAMC,QAAQ,GAAGV,WAAW,CAAEW,KAAK,IAAKA,KAAK,CAACC,EAAE,CAACC,aAAa,CAAC;EAC/D,MAAMC,IAAI,GAAGd,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACG,IAAI,CAAC;EAE7C,MAAMC,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAK9BH,SAAS,CAAC,MAAK;IACb,MAAMkB,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/BD,QAAQ,CAACV,SAAS,CAACY,gBAAgB,CAAC;QAClCC,MAAM,EAAC,SAAS;QAChBC,KAAK,EAAC,QAAQ;QACdC,OAAO,EAAC;MACV,CAAC,CAAC,CAAC;MACH,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+DAA+D,EAC1F;QACEC,MAAM,EAAC,KAAK;QACZC,IAAI,EAACC,IAAI,CAACC,SAAS,CAACZ,IAAI,CAAC,CAAE;MAC7B,CAAC,CAAC;MAEF,IAAG,CAACO,QAAQ,CAACM,EAAE,EAAC;QACf,MAAM,IAAIC,KAAK,CAAC,MAAM,CAAC;MACxB;MAGAb,QAAQ,CAACV,SAAS,CAACY,gBAAgB,CAAC;QAClCC,MAAM,EAAC,SAAS;QAChBC,KAAK,EAAC,MAAM;QACZC,OAAO,EAAC;MACV,CAAC,CAAC,CAAC;IAEP,CAAC;IAEDJ,YAAY,CAAC,CAAC,CAACa,KAAK,CAACC,KAAK,IAAI;MAC5Bf,QAAQ,CAACV,SAAS,CAACY,gBAAgB,CAAC;QAClCC,MAAM,EAAC,OAAO;QACdC,KAAK,EAAC,MAAM;QACZC,OAAO,EAAC;MACV,CAAC,CAAC,CAAC;IAEL,CAAC,CAAC;EAEJ,CAAC,EAAC,CAACN,IAAI,CAAC,CAAC;EAGT,oBACEP,OAAA,CAACJ,MAAM;IAAA4B,QAAA,GAEJrB,QAAQ,iBAAIH,OAAA,CAACL,IAAI;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrB5B,OAAA,CAACH,QAAQ;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEb;AAAC1B,EAAA,CAvDQD,GAAG;EAAA,QAEOR,WAAW,EACfA,WAAW,EAEPC,WAAW;AAAA;AAAAmC,EAAA,GALrB5B,GAAG;AAyDZ,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}