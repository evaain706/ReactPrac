{"ast":null,"code":"import { uiActions } from \"./ui-slice\";\n\n//Thunk 사용\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: 'pending',\n      title: '전송중...',\n      message: '장바구니 데이터 전송중'\n    }));\n    const sendRequest = async () => {\n      const response = await fetch('https://reduxprac-843b3-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(cart) //useSelector로 cart state를 가져왔기때문에 항상 최신의 상태유지가능\n      });\n      if (!response.ok) {\n        throw new Error('전송실패');\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: '전송성공',\n        message: '장바구니 데이터 전송성공'\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: '전송실패',\n        message: '장바구니 데이터 전송실패'\n      }));\n    }\n  };\n};","map":{"version":3,"names":["uiActions","sendCartData","cart","dispatch","showNotification","status","title","message","sendRequest","response","fetch","method","body","JSON","stringify","ok","Error","error"],"sources":["C:/Users/aaa/Desktop/ReactPrac/redux-toolkit-async/src/store/mycart-actions.js"],"sourcesContent":["import { uiActions } from \"./ui-slice\";\r\n\r\n\r\n//Thunk 사용\r\nexport const sendCartData = (cart) => {\r\n    return async (dispatch) => {\r\n      dispatch(\r\n       uiActions.showNotification({\r\n          status:'pending',\r\n          title:'전송중...',\r\n          message:'장바구니 데이터 전송중',\r\n        }))\r\n  \r\n        const sendRequest =  async () => {\r\n          const response = await fetch('https://reduxprac-843b3-default-rtdb.firebaseio.com/cart.json',\r\n            {\r\n              method:'PUT',\r\n              body:JSON.stringify(cart), //useSelector로 cart state를 가져왔기때문에 항상 최신의 상태유지가능\r\n            });\r\n    \r\n            if(!response.ok){\r\n             throw new Error('전송실패')\r\n            }\r\n        }\r\n  \r\n        try{\r\n          await sendRequest();\r\n          dispatch(uiActions.showNotification({\r\n            status:'success',\r\n            title:'전송성공',\r\n            message:'장바구니 데이터 전송성공',\r\n          }))\r\n        }catch(error){\r\n            dispatch(uiActions.showNotification({\r\n              status:'error',\r\n              title:'전송실패',\r\n              message:'장바구니 데이터 전송실패',\r\n            }))\r\n        }\r\n    };\r\n  };"],"mappings":"AAAA,SAASA,SAAS,QAAQ,YAAY;;AAGtC;AACA,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAK;EAClC,OAAO,MAAOC,QAAQ,IAAK;IACzBA,QAAQ,CACPH,SAAS,CAACI,gBAAgB,CAAC;MACxBC,MAAM,EAAC,SAAS;MAChBC,KAAK,EAAC,QAAQ;MACdC,OAAO,EAAC;IACV,CAAC,CAAC,CAAC;IAEH,MAAMC,WAAW,GAAI,MAAAA,CAAA,KAAY;MAC/B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+DAA+D,EAC1F;QACEC,MAAM,EAAC,KAAK;QACZC,IAAI,EAACC,IAAI,CAACC,SAAS,CAACZ,IAAI,CAAC,CAAE;MAC7B,CAAC,CAAC;MAEF,IAAG,CAACO,QAAQ,CAACM,EAAE,EAAC;QACf,MAAM,IAAIC,KAAK,CAAC,MAAM,CAAC;MACxB;IACJ,CAAC;IAED,IAAG;MACD,MAAMR,WAAW,CAAC,CAAC;MACnBL,QAAQ,CAACH,SAAS,CAACI,gBAAgB,CAAC;QAClCC,MAAM,EAAC,SAAS;QAChBC,KAAK,EAAC,MAAM;QACZC,OAAO,EAAC;MACV,CAAC,CAAC,CAAC;IACL,CAAC,QAAMU,KAAK,EAAC;MACTd,QAAQ,CAACH,SAAS,CAACI,gBAAgB,CAAC;QAClCC,MAAM,EAAC,OAAO;QACdC,KAAK,EAAC,MAAM;QACZC,OAAO,EAAC;MACV,CAAC,CAAC,CAAC;IACP;EACJ,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}